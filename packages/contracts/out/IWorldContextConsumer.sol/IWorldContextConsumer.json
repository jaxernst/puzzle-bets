{"abi":[{"type":"function","name":"_msgSender","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"_msgValue","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"_world","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceID","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"_msgSender()":"119df25f","_msgValue()":"45ec9354","_world()":"e1af802c","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_msgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_msgValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract should only be used for contracts without their own storage, like Systems.\",\"kind\":\"dev\",\"methods\":{\"_msgSender()\":{\"returns\":{\"_0\":\"The address of the `msg.sender` that called the World contract before the World routed the call to the WorldContextConsumer contract.\"}},\"_msgValue()\":{\"returns\":{\"_0\":\"The `msg.value` in the call to the World contract before the World routed the call to the WorldContextConsumer contract.\"}},\"_world()\":{\"returns\":{\"_0\":\"The address of the World contract that routed the call to this WorldContextConsumer.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165.\"},\"returns\":{\"_0\":\"True if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, false otherwise.\"}}},\"title\":\"WorldContextConsumer - Extracting trusted context values from appended calldata.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_msgSender()\":{\"notice\":\"Extract the `msg.sender` from the context appended to the calldata.\"},\"_msgValue()\":{\"notice\":\"Extract the `msg.value` from the context appended to the calldata.\"},\"_world()\":{\"notice\":\"Get the address of the World contract that routed the call to this WorldContextConsumer.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface.\"}},\"notice\":\"This contract is designed to extract trusted context values (like msg.sender and msg.value) from the appended calldata. It provides mechanisms similar to EIP-2771 (https://eips.ethereum.org/EIPS/eip-2771), but allowing any contract to be the trusted forwarder.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol\":\"IWorldContextConsumer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[\":@latticexyz/=node_modules/@latticexyz/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"node_modules/@latticexyz/world/src/IERC165.sol\":{\"keccak256\":\"0x62b83f433a8c1671de2cf2db513d8565f08525a163a371231dac22a4310ebc85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f81e1d6c44aed5a71a8670a6d580910a66a1432eaffca3e0e1cb6b8b4df1c250\",\"dweb:/ipfs/QmeMwKHmv99P645u2qCU18xRJpcsGyPDrqrRk1YKp6uweF\"]},\"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol\":{\"keccak256\":\"0x31bc375a375454220b7a3d86bd9aacb7e9ee5ba402fbf74afe86f8e57881c253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d884814ec4901ccec3a6dc8aba24c738f1dbc3730969d19ea094e33d8d00d60\",\"dweb:/ipfs/QmQoFQMb73p4JvVQYhyk2ADeN5TE6svVfghBbfXQg9FMdu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"_msgSender","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"_msgValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"_world","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceID","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"_msgSender()":{"returns":{"_0":"The address of the `msg.sender` that called the World contract before the World routed the call to the WorldContextConsumer contract."}},"_msgValue()":{"returns":{"_0":"The `msg.value` in the call to the World contract before the World routed the call to the WorldContextConsumer contract."}},"_world()":{"returns":{"_0":"The address of the World contract that routed the call to this WorldContextConsumer."}},"supportsInterface(bytes4)":{"details":"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.","params":{"interfaceID":"The interface identifier, as specified in ERC-165."},"returns":{"_0":"True if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"_msgSender()":{"notice":"Extract the `msg.sender` from the context appended to the calldata."},"_msgValue()":{"notice":"Extract the `msg.value` from the context appended to the calldata."},"_world()":{"notice":"Get the address of the World contract that routed the call to this WorldContextConsumer."},"supportsInterface(bytes4)":{"notice":"Query if a contract implements an interface."}},"version":1}},"settings":{"remappings":["@latticexyz/=node_modules/@latticexyz/","ds-test/=node_modules/ds-test/src/","forge-std/=node_modules/forge-std/src/"],"optimizer":{"enabled":true,"runs":3000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol":"IWorldContextConsumer"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@latticexyz/world/src/IERC165.sol":{"keccak256":"0x62b83f433a8c1671de2cf2db513d8565f08525a163a371231dac22a4310ebc85","urls":["bzz-raw://f81e1d6c44aed5a71a8670a6d580910a66a1432eaffca3e0e1cb6b8b4df1c250","dweb:/ipfs/QmeMwKHmv99P645u2qCU18xRJpcsGyPDrqrRk1YKp6uweF"],"license":"MIT"},"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol":{"keccak256":"0x31bc375a375454220b7a3d86bd9aacb7e9ee5ba402fbf74afe86f8e57881c253","urls":["bzz-raw://8d884814ec4901ccec3a6dc8aba24c738f1dbc3730969d19ea094e33d8d00d60","dweb:/ipfs/QmQoFQMb73p4JvVQYhyk2ADeN5TE6svVfghBbfXQg9FMdu"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@latticexyz/world/src/IWorldContextConsumer.sol","id":21221,"exportedSymbols":{"IERC165":[21131],"IWorldContextConsumer":[21220]},"nodeType":"SourceUnit","src":"32:1755:43","nodes":[{"id":21196,"nodeType":"PragmaDirective","src":"32:25:43","nodes":[],"literals":["solidity",">=","0.8",".21"]},{"id":21198,"nodeType":"ImportDirective","src":"59:40:43","nodes":[],"absolutePath":"node_modules/@latticexyz/world/src/IERC165.sol","file":"./IERC165.sol","nameLocation":"-1:-1:-1","scope":21221,"sourceUnit":21132,"symbolAliases":[{"foreign":{"id":21197,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21131,"src":"68:7:43","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":21220,"nodeType":"ContractDefinition","src":"884:902:43","nodes":[{"id":21207,"nodeType":"FunctionDefinition","src":"1176:54:43","nodes":[],"documentation":{"id":21202,"nodeType":"StructuredDocumentation","src":"931:242:43","text":" @notice Extract the `msg.sender` from the context appended to the calldata.\n @return The address of the `msg.sender` that called the World contract\n before the World routed the call to the WorldContextConsumer contract."},"functionSelector":"119df25f","implemented":false,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"1185:10:43","parameters":{"id":21203,"nodeType":"ParameterList","parameters":[],"src":"1195:2:43"},"returnParameters":{"id":21206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21207,"src":"1221:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21204,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1220:9:43"},"scope":21220,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":21213,"nodeType":"FunctionDefinition","src":"1465:53:43","nodes":[],"documentation":{"id":21208,"nodeType":"StructuredDocumentation","src":"1234:228:43","text":" @notice Extract the `msg.value` from the context appended to the calldata.\n @return The `msg.value` in the call to the World contract before the World routed the\n call to the WorldContextConsumer contract."},"functionSelector":"45ec9354","implemented":false,"kind":"function","modifiers":[],"name":"_msgValue","nameLocation":"1474:9:43","parameters":{"id":21209,"nodeType":"ParameterList","parameters":[],"src":"1483:2:43"},"returnParameters":{"id":21212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21213,"src":"1509:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1509:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:9:43"},"scope":21220,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":21219,"nodeType":"FunctionDefinition","src":"1734:50:43","nodes":[],"documentation":{"id":21214,"nodeType":"StructuredDocumentation","src":"1522:209:43","text":" @notice Get the address of the World contract that routed the call to this WorldContextConsumer.\n @return The address of the World contract that routed the call to this WorldContextConsumer."},"functionSelector":"e1af802c","implemented":false,"kind":"function","modifiers":[],"name":"_world","nameLocation":"1743:6:43","parameters":{"id":21215,"nodeType":"ParameterList","parameters":[],"src":"1749:2:43"},"returnParameters":{"id":21218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":21219,"src":"1775:7:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21216,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:9:43"},"scope":21220,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":21200,"name":"IERC165","nameLocations":["919:7:43"],"nodeType":"IdentifierPath","referencedDeclaration":21131,"src":"919:7:43"},"id":21201,"nodeType":"InheritanceSpecifier","src":"919:7:43"}],"canonicalName":"IWorldContextConsumer","contractDependencies":[],"contractKind":"interface","documentation":{"id":21199,"nodeType":"StructuredDocumentation","src":"410:473:43","text":" @title WorldContextConsumer - Extracting trusted context values from appended calldata.\n @notice This contract is designed to extract trusted context values (like msg.sender and msg.value)\n from the appended calldata. It provides mechanisms similar to EIP-2771 (https://eips.ethereum.org/EIPS/eip-2771),\n but allowing any contract to be the trusted forwarder.\n @dev This contract should only be used for contracts without their own storage, like Systems."},"fullyImplemented":false,"linearizedBaseContracts":[21220,21131],"name":"IWorldContextConsumer","nameLocation":"894:21:43","scope":21221,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":43}